include(ExternalProject)
include(GNUInstallDirs)

if(find)
  find_package(Curses)
endif()

if(CURSES_FOUND)
  if(NOT EXISTS ${CURSES_INCLUDE_DIRS}/curses.h)
    find_path(curses_inc
    NAMES curses.h
    HINTS ${CURSES_INCLUDE_DIRS}/ncurses ${CURSES_INCLUDE_DIRS}/pdcurses
    REQUIRED
    )
    list(APPEND CURSES_INCLUDE_DIRS ${curses_inc})
  endif()

  if(NOT TARGET CURSES::CURSES)
    add_library(CURSES::CURSES INTERFACE IMPORTED)
    target_link_libraries(CURSES::CURSES INTERFACE ${CURSES_LIBRARIES})
    target_include_directories(CURSES::CURSES INTERFACE ${CURSES_INCLUDE_DIRS})
  endif()

  return()
endif()

set(CURSES_INCLUDE_DIRS ${CMAKE_INSTALL_PREFIX}/include)

# DO NOT use CMAKE_INSTALL_FULL_LIBDIR as the install doesn't use lib/lib64
if(BUILD_SHARED_LIBS)
  if(WIN32)
    set(CURSES_LIBRARIES ${CMAKE_INSTALL_PREFIX}/bin/${CMAKE_SHARED_LIBRARY_PREFIX}pdcurses${CMAKE_SHARED_LIBRARY_SUFFIX})
  else()
    set(CURSES_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib/${CMAKE_SHARED_LIBRARY_PREFIX}pdcurses${CMAKE_SHARED_LIBRARY_SUFFIX})
  endif()

else()
  set(CURSES_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}pdcurses${CMAKE_STATIC_LIBRARY_SUFFIX})
endif()

set(curses_args
-DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
-DBUILD_TESTING:BOOL=off
-DCMAKE_BUILD_TYPE=Release
-DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}
)

ExternalProject_Add(CURSES
GIT_REPOSITORY https://github.com/scivision/PDCurses.git
GIT_TAG af44f4e81e231ccde51f651d554c13d55164248a
GIT_SHALLOW true
INACTIVITY_TIMEOUT 60
TLS_VERIFY true
CONFIGURE_HANDLED_BY_BUILD ON
CMAKE_ARGS ${curses_args}
BUILD_BYPRODUCTS ${CURSES_LIBRARIES}
)

file(MAKE_DIRECTORY ${CURSES_INCLUDE_DIRS})

add_library(CURSES::CURSES INTERFACE IMPORTED)
target_link_libraries(CURSES::CURSES INTERFACE ${CURSES_LIBRARIES} $<$<BOOL:${MSVC}>:Advapi32>)
target_include_directories(CURSES::CURSES INTERFACE ${CURSES_INCLUDE_DIRS})

if(NOT WIN32)
  include(${CMAKE_CURRENT_LIST_DIR}/x11.cmake)
  target_link_libraries(CURSES::CURSES INTERFACE ${X11_LIBRARIES} X11::Xpm X11::Xmu X11::Xt)
  target_include_directories(CURSES::CURSES INTERFACE ${X11_INCLUDE_DIR})
endif()

add_dependencies(CURSES::CURSES CURSES)
